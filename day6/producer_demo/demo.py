#!/usr/bin/env python# coding:utf-8'''生产者消费者模型'''from threading import Threadfrom Queue import Queueimport timeclass Procuder(Thread):		def __init__(self,name,queue):		'''		@param name:生产者名字		@param queue:容器		'''		self.__Name = name		self.__Queue = queue		super(Procuder,self).__init__() #执行父类构造函数	def run(self):		while True:			if self.__Queue.full():				time.sleep(50)			else:				self.__Queue.put('包子')				time.sleep(1)				print(self.__Name+'做了一个包子')				print(self.__Queue.qsize())				#print(self.__Name+'做了一个包子','[剩余数量]>>>')		#Thread.run(self)		class Consumer(Thread):		def __init__(self,name,queue):		'''		@param name:消费者名字		@param queue:容器		'''		self.__Name = name		self.__Queue = queue		super(Consumer,self).__init__()	def run(self):		while True:			if self.__Queue.empty():				time.sleep(60)			else:				self.__Queue.get()				time.sleep(10)				print ('%s 吃了一个包子' % self.__Name)		#Thread.run(self)que = Queue(maxsize = 50)for i in list(range(10)):	name = '厨师 %s' % i	chushi = Procuder(name,que)	chushi.start()for v in list(range(100)):	name = '顾客 %s' % v	guke = Consumer(name,que)	guke.start()